import { type MongoAbility } from "@casl/ability";
import { type z } from "zod";
import { type analyticsSchema } from "~/schema/analytics.schema";
import { type apiErrorSchema } from "~/schema/api-error.schema";
import { type appClaimsSchema } from "~/schema/app-claims.schema";
import { type approvalStatusSchema } from "~/schema/approval-status.schema";
import { type approverMatrixSchema } from "~/schema/approver-matrix.schema";
import { type credentialsSchema } from "~/schema/auth.schema";
import { type changePasswordPayloadSchema } from "~/schema/change-password-payload.schema";
import { type changePasswordSchema } from "~/schema/change-password.schema";
import { clientFilterSchema } from "~/schema/client-filter.schema";
import { type creditPayloadSchema } from "~/schema/credit-payload.schema";
import { type expenseTypeResponseSchema } from "~/schema/expense-type-response.schema";
import { type expenseTypeSchema } from "~/schema/expense-type.schema";
import { type fileStackSchema } from "~/schema/file-stack.schema";
import { type forgotPasswordSchema } from "~/schema/forgot-password.schema";
import { type groupResponseSchema } from "~/schema/group-response.schema";
import { type groupTypeSchema } from "~/schema/group-type.schema";
import { type groupSchema } from "~/schema/group.schema";
import { type initialLoginFormSchema } from "~/schema/initial-login.schema";
import { type particularSchema } from "~/schema/particulars.schema";
import { type queryFilterSchema } from "~/schema/query-filter.schema";
import { type approverSchema } from "~/schema/reimbursement-approver.schema";
import { reimbursementClientsSchema } from "~/schema/reimbursement-clients.schema";
import { type reimbursementFormValuesSchema } from "~/schema/reimbursement-form-values.schema";
import { reimbursementHrbpsSchema } from "~/schema/reimbursement-hrbps.schema";
import { type onholdReimbursementSchema } from "~/schema/reimbursement-onhold-form.schema";
import { type particularDetailsSchema } from "~/schema/reimbursement-particulars.schema";
import { type rejectReimbursementSchema } from "~/schema/reimbursement-reject-form.schema";
import { type reimbursementRequestSchema } from "~/schema/reimbursement-request.schema";
import { type reimbursementTypeSchema } from "~/schema/reimbursement-type.schema";
import { type requestListResponseSchema } from "~/schema/request-list-response.schema";
import { type requestTypeResponseSchema } from "~/schema/request-type-response.schema";
import { type requestTypeSchema } from "~/schema/request-type.schema";
import { type responsePaginationSchema } from "~/schema/response-pagination.schema";
import { type statusResponseSchema } from "~/schema/status-response.schema";
import { type statusTypeSchema } from "~/schema/status-type.schema";
import { type statusSchema } from "~/schema/status.schema";
import { type userProfileSchema, type userSchema } from "~/schema/user.schema";
import { type usersResponseSchema } from "~/schema/users-response.schema";

export type AbilityActions = "access" | "create" | "read" | "update" | "delete";
export type AppAbility = MongoAbility<[AbilityActions, AppClaims]>;
export type DashboardAnalytics = z.infer<typeof analyticsSchema>;
export type AppClaims = z.infer<typeof appClaimsSchema>;
export type ApprovalStatus = z.infer<typeof approvalStatusSchema>;
export type ApproverMatrix = z.infer<typeof approverMatrixSchema>;
export type Credentials = z.infer<typeof credentialsSchema>;
export type GroupType = z.infer<typeof groupTypeSchema>;
export type QueryFilter = z.infer<typeof queryFilterSchema>;
export type Approver = z.infer<typeof approverSchema>;
export type OnholdReimbursementType = z.infer<typeof onholdReimbursementSchema>;
export type ParticularDetails = z.infer<typeof particularDetailsSchema>;
export type RejectReimbursementType = z.infer<typeof rejectReimbursementSchema>;
export type ReimbursementFormType = z.infer<typeof reimbursementTypeSchema>;
export type StatusType = z.infer<typeof statusTypeSchema>;
export type Status = z.infer<typeof statusSchema>;
export type UserProfileSchema = z.infer<typeof userProfileSchema>;
export type User = z.infer<typeof userSchema>;
export type ExpenseType = z.infer<typeof expenseTypeSchema>;
export type Particular = z.infer<typeof particularSchema>;
export type FileStack = z.infer<typeof fileStackSchema>;
export type RequestType = z.infer<typeof requestTypeSchema>;
export type ReimbursementRequest = z.infer<typeof reimbursementRequestSchema>;
export type CreditPayload = z.infer<typeof creditPayloadSchema>;
export type ResponsePagination = z.infer<typeof responsePaginationSchema>;
export type RequestListResponse = z.infer<typeof requestListResponseSchema>;
export type ReimbursementClientsResponse = z.infer<
  typeof reimbursementClientsSchema
>;
export type ReimbursementHrbpsResponse = z.infer<
  typeof reimbursementHrbpsSchema
>;
export type ClientFilterQuery = z.infer<typeof clientFilterSchema>;
export type StatusResponse = z.infer<typeof statusResponseSchema>;
export type RequestTypeResponse = z.infer<typeof requestTypeResponseSchema>;
export type ExpenseTypeResponse = z.infer<typeof expenseTypeResponseSchema>;
export type ReimbursementFormValues = z.infer<
  typeof reimbursementFormValuesSchema
>;
export type Group = z.infer<typeof groupSchema>;
export type GroupResponse = z.infer<typeof groupResponseSchema>;
export type UsersResponse = z.infer<typeof usersResponseSchema>;
export type RtkApiError = z.infer<typeof apiErrorSchema>;
export type ChangePassword = z.infer<typeof changePasswordSchema>;
export type ChangePasswordPayload = z.infer<typeof changePasswordPayloadSchema>;
export type ForgotPasswordPayload = z.infer<typeof forgotPasswordSchema>;
export type InitialLoginFormPayload = z.infer<typeof initialLoginFormSchema>;
